{"mappings":"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","sources":["src/script.js"],"sourcesContent":["'use strict';\r\n\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n// BANKIST APP\r\n\r\n/////////////////////////////////////////////////\r\n// Data\r\n\r\n// Alert\r\nalert(\"user = js \\npin = 1111\")\r\n\r\n// DIFFERENT DATA! Contains movement dates, currency and locale\r\n\r\nconst account1 = {\r\n  owner: 'Jonas Schmedtmann',\r\n  movements: [200, 455.23, -306.5, 25000, -642.21, -133.9, 79.97, 1300],\r\n  interestRate: 1.2, // %\r\n  pin: 1111,\r\n\r\n  movementsDates: [\r\n    '2019-11-18T21:31:17.178Z',\r\n    '2019-12-23T07:42:02.383Z',\r\n    '2020-01-28T09:15:04.904Z',\r\n    '2020-04-01T10:17:24.185Z',\r\n    '2020-05-08T14:11:59.604Z',\r\n    '2020-05-27T17:01:17.194Z',\r\n    '2020-07-11T23:36:17.929Z',\r\n    '2024-09-30T12:01:20.894Z',\r\n  ],\r\n  currency: 'EUR',\r\n  locale: 'pt-PT', // de-DE\r\n};\r\n\r\nconst account2 = {\r\n  owner: 'Jessica Davis',\r\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\r\n  interestRate: 1.5,\r\n  pin: 2222,\r\n\r\n  movementsDates: [\r\n    '2019-11-01T13:15:33.035Z',\r\n    '2019-11-30T09:48:16.867Z',\r\n    '2019-12-25T06:04:23.907Z',\r\n    '2020-01-25T14:18:46.235Z',\r\n    '2020-02-05T16:33:06.386Z',\r\n    '2020-04-10T14:43:26.374Z',\r\n    '2020-06-25T18:49:59.371Z',\r\n    '2024-09-30T12:01:20.894Z',\r\n  ],\r\n  currency: 'USD',\r\n  locale: 'en-US',\r\n};\r\n\r\nconst accounts = [account1, account2];\r\n\r\n/////////////////////////////////////////////////\r\n// Elements\r\nconst labelWelcome = document.querySelector('.welcome');\r\nconst labelDate = document.querySelector('.date');\r\nconst labelBalance = document.querySelector('.balance__value');\r\nconst labelSumIn = document.querySelector('.summary__value--in');\r\nconst labelSumOut = document.querySelector('.summary__value--out');\r\nconst labelSumInterest = document.querySelector('.summary__value--interest');\r\nconst labelTimer = document.querySelector('.timer');\r\n\r\nconst containerApp = document.querySelector('.app');\r\nconst containerMovements = document.querySelector('.movements');\r\n\r\nconst btnLogin = document.querySelector('.login__btn');\r\nconst btnTransfer = document.querySelector('.form__btn--transfer');\r\nconst btnLoan = document.querySelector('.form__btn--loan');\r\nconst btnClose = document.querySelector('.form__btn--close');\r\nconst btnSort = document.querySelector('.btn--sort');\r\n\r\nconst inputLoginUsername = document.querySelector('.login__input--user');\r\nconst inputLoginPin = document.querySelector('.login__input--pin');\r\nconst inputTransferTo = document.querySelector('.form__input--to');\r\nconst inputTransferAmount = document.querySelector('.form__input--amount');\r\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\r\nconst inputCloseUsername = document.querySelector('.form__input--user');\r\nconst inputClosePin = document.querySelector('.form__input--pin');\r\n\r\n/////////////////////////////////////////////////\r\n// Functions\r\n\r\nconst formatMovementDate = function (date, locale) {\r\n  const calcDaysPased = (date1, date2) =>\r\n    Math.round(Math.abs((date2 - date1) / (1000 * 60 * 60 * 24)));\r\n\r\n  const daysPassed = calcDaysPased(new Date(), date);\r\n\r\n  if (daysPassed === 0) return 'Today';\r\n  if (daysPassed === 1) return 'Yesterday';\r\n  if (daysPassed <= 7) return `${daysPassed} days ago`;\r\n  else {\r\n    return new Intl.DateTimeFormat(locale).format(date);\r\n  }\r\n};\r\n\r\nconst displayMovements = function (acc, sort = false) {\r\n  containerMovements.innerHTML = ''; //* Reemplaza todo el contenido\r\n\r\n  const movs = sort\r\n    ? acc.movements.slice().sort((a, b) => a - b) //*Sort afecta el array original\r\n    : acc.movements;\r\n\r\n  movs.forEach(function (mov, i) {\r\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\r\n\r\n    const date = new Date(acc.movementsDates[i]); //*Por cada movimiento\r\n    //*Manera de recorrer dos arrays, date de las dates array[i]\r\n    const displayDate = formatMovementDate(date, acc.locale);\r\n    // console.log(displayDate); //mov.toFixed(2)\r\n\r\n    const formattedMov = formatCur(mov.toFixed(2), acc.locale, acc.currency);\r\n    const html = `\r\n      <div class=\"movements__row\">\r\n        <div class=\"movements__type movements__type--${type}\">${\r\n      i + 1\r\n    } ${type}</div>\r\n     <div class=\"movements__date\">${displayDate}</div>\r\n        <div class=\"movements__value\">${formattedMov}</div>\r\n      </div>\r\n    `;\r\n\r\n    containerMovements.insertAdjacentHTML('afterbegin', html); //*Crea nuevo contenido\r\n  });\r\n};\r\n\r\nconst formatCur = (value, locale, currency) => {\r\n  return new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency: currency,\r\n  }).format(value);\r\n};\r\n\r\nconst calcDisplayBalance = function (acc) {\r\n  acc.balance = acc.movements.reduce((acc, mov) => acc + mov, 0);\r\n\r\n  labelBalance.textContent = formatCur(acc.balance, acc.locale, acc.currency); //acc.balance.toFixed(2)\r\n};\r\n\r\nconst calcDisplaySummary = function (acc) {\r\n  const incomes = acc.movements\r\n    .filter(mov => mov > 0)\r\n    .reduce((acc, mov) => acc + mov, 0);\r\n\r\n  labelSumIn.textContent = formatCur(incomes, acc.locale, acc.currency); //incomes.toFixed(2)\r\n\r\n  const out = acc.movements\r\n    .filter(mov => mov < 0)\r\n    .reduce((acc, mov) => acc + mov, 0);\r\n  labelSumOut.textContent = formatCur(out, acc.locale, acc.currency); //Math.abs(out.toFixed(2))\r\n\r\n  const interest = acc.movements\r\n    .filter(mov => mov > 0)\r\n    .map(deposit => (deposit * acc.interestRate) / 100)\r\n    .filter((int, i, arr) => {\r\n      // // console.log(arr);\r\n      return int >= 1;\r\n    })\r\n    .reduce((acc, int) => acc + int, 0);\r\n  labelSumInterest.textContent = formatCur(interest, acc.locale, acc.currency); //interest.toFixed(2)\r\n};\r\n\r\nconst createUsernames = function (accs) {\r\n  accs.forEach(function (acc) {\r\n    acc.username = acc.owner\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .map(name => name[0])\r\n      .join('');\r\n  });\r\n};\r\ncreateUsernames(accounts);\r\n\r\nconst updateUI = function (acc) {\r\n  // Display movements\r\n  displayMovements(acc);\r\n\r\n  // Display balance\r\n  calcDisplayBalance(acc);\r\n\r\n  // Display summary\r\n  calcDisplaySummary(acc);\r\n};\r\n\r\nconst startLogOutTimer = function () {\r\n  let time = 300; //* Conversion segundos a minutos\r\n  const tick = () => {\r\n    // const hour = String(Math.trunc(time / 3600)).padStart(2, 0);\r\n    const min = String(Math.trunc(time / 60)).padStart(2, 0);\r\n    const sec = String(time % 60).padStart(2, 0);\r\n    // In each call, print the remaining time to UI\r\n    labelTimer.textContent = `${min}:${sec}`;\r\n\r\n    // When 0 seconds, stop timer and log out user\r\n    if (time === 0) {\r\n      clearInterval(timer);\r\n      labelWelcome.textContent = 'Log in to get started';\r\n      containerApp.style.opacity = 0;\r\n    }\r\n\r\n    // Decrese 1s\r\n    time--;\r\n  };\r\n  tick();\r\n  const timer = setInterval(tick, 1000); \r\n  return timer;\r\n};\r\n\r\n///////////////////////////////////////\r\n// Event handlers\r\n\r\n// Simular que estamos conectados\r\nlet currentAccount, timer;\r\nconst now = new Date();\r\n// //? Internationalizing Dates (Intl)\r\n\r\nbtnLogin.addEventListener('click', function (e) {\r\n  // Prevent form from submitting\r\n  e.preventDefault();\r\n\r\n  currentAccount = accounts.find(\r\n    acc => acc.username === inputLoginUsername.value\r\n  );\r\n  // console.log(currentAccount);\r\n\r\n  if (currentAccount?.pin === +inputLoginPin.value) {\r\n    // Display UI and message\r\n    labelWelcome.textContent = `Welcome back, ${\r\n      currentAccount.owner.split(' ')[0]\r\n    }`;\r\n    containerApp.style.opacity = 100;\r\n\r\n    // Create current date and time\r\n    const options = {\r\n      day: 'numeric', //*2-digit\r\n      month: 'numeric',\r\n      year: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      // weekday: 'long',\r\n    };\r\n    // const locale = navigator.language; //*Acceder al tiempo del usuario, objeto navegador y propiedad lenguaje\r\n    labelDate.textContent = new Intl.DateTimeFormat(\r\n      currentAccount.locale,\r\n      options\r\n    ).format(now);\r\n    //* Se pone el namespace intl, se llama a al funcion asignando idioma y pais, y se formatea la fecha\r\n\r\n    // Clear input fields\r\n    inputLoginUsername.value = inputLoginPin.value = '';\r\n    inputLoginPin.blur();\r\n\r\n    if (timer) clearInterval(timer); //*En caso ya exista un intervalo, lo limpia\r\n    timer = startLogOutTimer(); //*Se vuelve a declarar globalmente que es igual al intervalo que retorna\r\n\r\n    // Update UI\r\n    updateUI(currentAccount);\r\n  }\r\n});\r\n\r\nbtnTransfer.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  const amount = +inputTransferAmount.value;\r\n  const receiverAcc = accounts.find(\r\n    acc => acc.username === inputTransferTo.value\r\n  );\r\n  inputTransferAmount.value = inputTransferTo.value = '';\r\n\r\n  if (\r\n    amount > 0 &&\r\n    receiverAcc &&\r\n    currentAccount.balance >= amount &&\r\n    receiverAcc?.username !== currentAccount.username\r\n  ) {\r\n    // Doing the transfer\r\n    currentAccount.movements.push(-amount);\r\n    receiverAcc.movements.push(amount);\r\n\r\n    // Add transfer date\r\n    currentAccount.movementsDates.push(new Date().toISOString());\r\n    receiverAcc.movementsDates.push(new Date().toISOString());\r\n    // Update UI\r\n    updateUI(currentAccount);\r\n\r\n    // Reset timer\r\n    clearInterval(timer);\r\n    timer = startLogOutTimer();\r\n  }\r\n});\r\n\r\nbtnLoan.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n\r\n  const amount = Math.floor(inputLoanAmount.value); //*Convierte cada deposito en el entero menor\r\n\r\n  //* Si es mayor que 0 y es alguno de los movimientos es mayor al 10% de ese monto\r\n  if (amount > 0 && currentAccount.movements.some(mov => mov >= amount * 0.1)) {\r\n    setTimeout(function () {\r\n      // Add movement\r\n      currentAccount.movements.push(amount);\r\n\r\n      // Add loan date\r\n      currentAccount.movementsDates.push(new Date().toISOString()); //*Es un deposito hacia nosotros\r\n      // console.log(account1);\r\n\r\n      // Update UI\r\n      updateUI(currentAccount);\r\n\r\n      // Reset timer\r\n      clearInterval(timer);\r\n      timer = startLogOutTimer();\r\n    }, 1000);\r\n  }\r\n  inputLoanAmount.value = '';\r\n});\r\n\r\nbtnClose.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n\r\n  if (\r\n    inputCloseUsername.value === currentAccount.username &&\r\n    +inputClosePin.value === currentAccount.pin\r\n  ) {\r\n    const index = accounts.findIndex(\r\n      acc => acc.username === currentAccount.username\r\n    );\r\n    // console.log(index);\r\n    // .indexOf(23)\r\n\r\n    // Delete account\r\n    accounts.splice(index, 1);\r\n\r\n    // Hide UI\r\n    containerApp.style.opacity = 0;\r\n  }\r\n\r\n  inputCloseUsername.value = inputClosePin.value = '';\r\n});\r\n\r\nlet sorted = false;\r\nbtnSort.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  displayMovements(currentAccount, !sorted);\r\n  sorted = !sorted;\r\n});\r\n\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n// LECTURES\r\n//* Todos los numeros son decimales, por eso 23===23.0\r\n//*Se representan en formato 64 base 2\r\n// console.log(23 === 23.0);\r\n\r\n// Base 10 - 0 to 9 1/10 0.1\r\n// Binary base 2 - 0 1\r\n// console.log(0.1 + 0.2); //*Porque en binario 0.1 es un bucle infinito como 3.3333\r\n// console.log(0.1 + 0.2 === 0.3);\r\n//*No se pueden hacer calculos con precision cientifica o financieros en javascript\r\n\r\n// Conversion\r\n// console.log(Number('23'));\r\n// console.log(+'23'); //* cuando ve el mas, automaticamente hace coerción de tipos, conversion\r\nlet one = 1;\r\n\r\nconst nuevoarr = Array.from({ length: 7 }, (_, i) => i + 1);\r\n\r\nconst randomInt = (min, max) =>\r\n  Math.floor(Math.random() * (max - min) + 1) + min;\r\n\r\nconst isEven = n => n % 2 === 0; //*True o false porque es condicion booleana\r\nlabelBalance.addEventListener('click', function () {\r\n  //*Selecciona todas las clases, no solo la primera\r\n  [...document.querySelectorAll('.movements__row')].forEach((row, i) => {\r\n    //*Si se deja afuera del listener, se disparara al iniciar la app, y como esta opacity 100 no se mostrara\r\n    if (i % 2 === 0) row.style.backgroundColor = 'orangered';\r\n    // 0, 2, 4, 6\r\n    if (i % 3 === 0) row.style.backgroundColor = 'blue';\r\n    // 0, 3, 6, 9\r\n  });\r\n});\r\n\r\nconst num = 10; //*Para numeros pequeños sirve la funcion global bigInt\r\n\r\n//? Operation with Dates\r\nconst future = new Date(2002, 10, 33, 18, 45);\r\nconst calcDaysPased = (date1, date2) =>\r\n  Math.abs((date2 - date1) / (1000 * 60 * 60 * 24)); //*Para convertirlo a t unix, se divide entre 1000mx, 60seg, 60min, 24hrs\r\nconst days1 = calcDaysPased(new Date(2037, 3, 1), new Date(2037, 3, 4)); //*Nos\r\n\r\nconst today = new Date(); //*metodo setDate da el numero unix\r\nconst pasado = new Date(new Date().setDate(new Date().getDate() - 3));\r\nconst message = `${(today - pasado) / (1000 * 60 * 60 * 24)} dias han pasado`;\r\n// console.log(message);\r\n\r\nconst welcome = document.querySelector('.welcome');\r\n\r\nwelcome.setAttribute('tabindex', '0');\r\n\r\nwelcome.addEventListener('keydown', function (e) {\r\n  // console.log(e);\r\n  const colors = {\r\n    r: 'red',\r\n    b: 'blue',\r\n    v: 'green',\r\n  };\r\n  if (e.key) {\r\n    welcome.style.backgroundColor = colors[e.key];\r\n  }\r\n});\r\n//*Acepta [[],[]]\r\nconst mapita = new Map([\r\n  [22, 'si'],\r\n  ['siu', 45],\r\n]);\r\nmapita.set(4, 'hola');\r\n// console.log(mapita);\r\n// console.log(['hola', 2, 3].entries());\r\n\r\nconst nuevoA = Array.from({ length: 7 }, (_, i) => i + 1);\r\n// console.log(nuevoA);\r\n\r\n// const hoy = new Date();\r\n// const yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n// const resta = (hoy - yesterday) / (1000 * 60 * 60 * 24); //*No es necesario establecer año\r\n// // console.log(resta);\r\n\r\n//? Internationalizing Number (Intl)\r\n\r\nconst number = 3897987245.633347;\r\n\r\nconst options = {\r\n  style: 'unit', //unit //percent\r\n  unit: 'celsius', //mile-per-hour\r\n  currency: 'EUR', //currency, no definido por el pais\r\n  useGrouping: false, //*Quita o pone las comas\r\n};\r\n\r\n// const sort1 = Array.from({ length: 5 }, (_, i) => i + 1);\r\n// // console.log(sort1.sort((a, b) => b - a)); //*Sort afecta al array original\r\n//? Timers: setTimeout and setInterval\r\n//*Se pasan los args como tercer arg de la higher order fun\r\n// setTimeout\r\nconst ingredients = ['olives', 'spinach'];\r\nconst pizzaTimer = setTimeout(\r\n  (\r\n    ing1,\r\n    ing2 // console.log(`Heres your pizza with ${ing1} and ${ing2}`),\r\n  ) => 3000,\r\n  ...ingredients\r\n);\r\nif (ingredients.includes('spinach')) clearTimeout(pizzaTimer);\r\n//TODO Hacer un reloj en la consola que tome horas, minutos y segundos\r\n// setInterval(function () {\r\n//   // const now = new Date();\r\n//   // // console.log(now);\r\n//   // console.log(\r\n//     new Intl.DateTimeFormat(navigator.language, {\r\n//       hour: 'numeric',\r\n//       minute: 'numeric',\r\n//       second: 'numeric',\r\n//     }).format(new Date())\r\n//   );\r\n// }, 1000);\r\n\r\n// const holiwis = setInterval(() => { //*Siempre se ejecuta aunque se elmacena\r\n//   // console.log('hola');\r\n// }, 500);\r\nlet siu;\r\n"],"names":[],"version":3,"file":"timerBankistApp.44983732.js.map","sourceRoot":"/__parcel_source_root/"}